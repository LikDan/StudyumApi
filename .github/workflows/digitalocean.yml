name: CI

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
#2
env:
  REGISTRY: "registry.digitalocean.com/studyum"
  IMAGE_NAME: "studyum"
  IMAGE_TAG: "api"

#3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $IMAGE_TAG) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $IMAGE_TAG)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,IMAGE_TAG,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            # Stop running container
            docker stop $(echo $IMAGE_NAME)-$(echo $IMAGE_TAG)
            # Remove old container
            docker rm $(echo $IMAGE_NAME)-$(echo $IMAGE_TAG)
            # Run a new container from a new image
            docker run \
            -d -p 274:8080 \
            -e DB_URL='${{ secrets.DB_URL }}' \
            -e JWT_SECRET='${{ secrets.JWT_SECRET }}' \
            -e GOOGLE_SECRET='${{ secrets.GOOGLE_SECRET }}' \
            -e GIN_MODE='release' \
            -e OAUTH2_CALLBACK='https://studyum.net' \
            --restart always \
            --name $(echo $IMAGE_NAME)-$(echo $IMAGE_TAG) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $IMAGE_TAG)

